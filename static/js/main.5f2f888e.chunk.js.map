{"version":3,"sources":["Modal.js","MessageBar.js","AuthToken.js","FetchFunctions.js","AddSong.js","AddAlbum.js","NavBar.js","Registration.js","SongListRow.js","TableHeadersUtility.js","SongList.js","Songs.js","AddCommentBox.js","Comment.js","CommentsList.js","Mark.js","SongDetail.js","AlbumListRow.js","AlbumInvitation.js","AlbumInvitationListRow.js","AlbumInvitationList.js","AlbumList.js","Albums.js","AlbumDetail.js","PageNotFound.js","ConfirmPassword.js","UserPanel.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","props","outerDivStyle","position","top","left","width","height","background","zIndex","innerDivStyle","transform","padding","border","borderStyle","escFunction","bind","event","keyCode","this","hideModal","document","addEventListener","removeEventListener","enabled","style","onClick","currentTarget","target","children","Component","MessageBar","errorColor","successColor","lineHeight","instance","state","message","isError","clearTimeout","timeout","setState","hideMessage","backgroundColor","error","setTimeout","AuthToken","FetchFunctions","route","params","successCallback","cancelFlag","paramsString","Object","entries","key","value","fetch","backendUrl","method","headers","token","response","cancel","json","ShowError","GetExecute","body","failCallback","JSON","stringify","status","then","catch","Error","AddSong","genres","handleInputChange","Get","type","checked","name","preventDefault","title","performer","year","genre","Post","ShowMessage","Form","onSubmit","handleSubmit","Label","Control","onChange","min","max","className","map","x","Button","AddAlbum","cookies","albumName","isPublic","userId","get","public","owners","Row","Col","placeholder","Check","inline","marginLeft","label","id","withCookies","NavBar","displayName","user_id","showAddSongModal","username","password","showAddAlbumModal","Navbar","bg","variant","Nav","Link","as","to","logout","FormControl","e","login","href","set","window","location","reload","remove","navBarLoggedIn","navBarLoggedOut","Registration","email","first_name","last_name","surname","SongListRow","favourite","Delete","author","song","songId","history","push","color","setFavourite","navigateToSongDetail","songName","mark","commentsCount","TableHeadersUtility","sortOption","sortMode","newSortMode","content","sortModeUp","sortModeDown","colorsStyleUp","buttonPressedStyle","buttonNotPressedStyle","colorsStyleDown","changeSortMode","getSortButtonVariant","buttonStyle","buttonUpStyle","size","margin","buttonDownStyle","right","borderRadius","borderColor","sortOptions","titleUp","titleDown","nameUp","nameDown","songsCountUp","songsCountDown","performerUp","performerDown","genreUp","genreDown","yearUp","yearDown","marksUp","marksDown","commentsUp","commentsDown","SongList","songs","offset","loadMoreButtonText","canLoadMoreSongs","fetchData","handleFetch","renderTableHeader","prevProps","prevState","snapshot","yearTo","yearSince","markInput","markLess","markEqual","markMore","albumId","user","markFilter","chooseMarkInput","mark_filter","length","concat","prepareParams","Table","striped","bordered","hover","marks_avg","toPrecision","comments_count","colSpan","loadMore","Songs","genresInput","nameInput","genresText","handleGenreCheckboxChange","i","splice","createGenresString","genresString","join","marginBottom","md","marginRight","Dropdown","Toggle","DropdownMenu","step","AddCommentBox","sendComment","textboxContent","album","commentAPILink","textAlign","paddingLeft","rows","handleOnChange","Comment","Fragment","align","date","text","CommentsList","comments","canLoadMoreComments","loadMoreComments","fetchedData","forEach","Date","create_date","sort","a","b","newCommentsArray","targetId","marginTop","toLocaleString","Mark","cancelFlagMarks","cancelFlagAuthor","starsColor","onMouseEnterStar","markAPILink","avg","markAuthorAPILink","myMark","Put","starIndex","newArray","slice","onMouseLeave","onMouseEnter","sendMark","SongDetail","songPerformer","songYear","songGenre","submitAddToAlbum","match","private","get_all","albums","add_song","alert","renderAddToAlbum","AlbumListRow","navigateToAlbumDetail","songsCount","showModal","AlbumInvitation","errorMessage","successMessage","AlbumInvitationListRow","accept","albumInvitation","answerInvitation","AlbumInvitationList","results","album_name","songs_count","AlbumList","page","canLoadMoreAlbums","myAlbums","Albums","AlbumDetail","MyComponent","ConfirmPassword","callbackParam","check_password","callback","marginLeft10px","UserPanel","first_name_placeholder","last_name_placeholder","email_placeholder","newPassword","newPasswordConfirm","passwordCallback","handleSubmitPassword","handleSubmitNames","handleSubmitEmail","App","path","component","render","exact","PageNotFound","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","CookiesProvider","getElementById"],"mappings":"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","file":"static/js/main.5f2f888e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Modal extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.escFunction = this.escFunction.bind(this)\r\n    }\r\n\r\n    escFunction(event){\r\n        if(event.keyCode === 27) {\r\n            this.props.hideModal()\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.addEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.removeEventListener(\"keydown\", this.escFunction, false);\r\n    }\r\n\r\n    outerDivStyle = {\r\n        position: 'fixed',\r\n        top: 0,\r\n        left: 0,\r\n        width: '100%',\r\n        height: '100%',\r\n        background: 'rgba(0, 0, 0, 0.6)',\r\n        zIndex: 10\r\n    }\r\n\r\n    innerDivStyle = {\r\n        position: 'fixed',\r\n        background: 'white',\r\n        height: 'auto',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        padding: '30px',\r\n        border: '2px',\r\n        borderStyle: 'solid',\r\n    }\r\n\r\n    render() {\r\n        return (this.props.enabled ?\r\n                <div style={this.outerDivStyle} onClick={(event) => {\r\n                    if(event.currentTarget === event.target) this.props.hideModal()\r\n                    }\r\n                }>\r\n                    <div style={this.innerDivStyle}>\r\n                        {this.props.children}\r\n                    </div>\r\n                </div>\r\n                : \"\"\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\n\r\nclass MessageBar extends Component {\r\n    static instance;\r\n    static timeout;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        MessageBar.instance = this;\r\n        this.state = {\r\n            message: '',\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    errorColor = 'rgba(255,100,100, 0.6)'\r\n    successColor = 'rgba(100,255,100, 0.6)'\r\n\r\n    style = {\r\n        position: 'fixed',\r\n        width: '100%',\r\n        height: '60px',\r\n        lineHeight: '60px',\r\n        zIndex: 50\r\n    }\r\n\r\n    static ShowError(error) {\r\n        clearTimeout(this.timeout)\r\n\r\n        this.instance.setState({\r\n            message: error,\r\n            isError: true\r\n        })\r\n\r\n        this.timeout = setTimeout(() => this.instance.setState({\r\n            message: ''\r\n        }), 4000)\r\n    }\r\n\r\n    static ShowMessage(message) {\r\n        clearTimeout(this.timeout)\r\n\r\n        this.instance.setState({\r\n            message: message,\r\n            isError: false\r\n        })\r\n\r\n        this.timeout = setTimeout(() => this.instance.setState({\r\n            message: ''\r\n        }), 4000)\r\n    }\r\n\r\n    hideMessage() {\r\n        clearTimeout(MessageBar.timeout)\r\n        this.setState({\r\n            message: '',\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.state.message ?\r\n            <div onClick={() => this.hideMessage()} style={{...this.style, backgroundColor: this.state.isError ? this.errorColor : this.successColor}}>\r\n                {this.state.message}\r\n            </div>\r\n                :\r\n                ''\r\n        );\r\n    }\r\n}\r\n\r\nexport default MessageBar;","class AuthToken {\r\n    static token\r\n}\r\n\r\nexport default AuthToken","import MessageBar from \"./MessageBar\";\r\nimport AuthToken from \"./AuthToken\";\r\n\r\nclass FetchFunctions {\r\n    static backendUrl = 'http://127.0.0.1:8000/'\r\n    //static backendUrl = 'https://inzynierka.bieda.it/'\r\n\r\n    static async GetExecute(route, params, successCallback, cancelFlag) {\r\n        try {\r\n            let paramsString = '/';\r\n\r\n            if(params) {\r\n                paramsString += '?';\r\n                for (const [key, value] of Object.entries(params)) {\r\n                    if(value || value === false)\r\n                        paramsString += `${key}=${value}&`\r\n                }\r\n            }\r\n\r\n            let response = await fetch(`${this.backendUrl}${route}${paramsString}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    'content-type': \"application/json\",\r\n                    'Authorization': AuthToken.token ? `Token ${AuthToken.token}` : ''\r\n                }\r\n            })\r\n            if(cancelFlag.cancel)\r\n                return\r\n\r\n            let json = await response.json()\r\n\r\n            if(cancelFlag.cancel)\r\n                return\r\n\r\n            successCallback(json)\r\n        }\r\n        catch {\r\n            MessageBar.ShowError(`Coś poszło nie tak! GET ${route}`)\r\n        }\r\n    }\r\n\r\n    static Get(route, params, successCallback) {\r\n        let cancelFlag = {cancel: false}\r\n        this.GetExecute(route, params, successCallback, cancelFlag)\r\n        return cancelFlag\r\n    }\r\n\r\n    static async Post(route, body, successCallback, failCallback = null) {\r\n        try {\r\n            let response = await fetch(`${this.backendUrl}${route}/`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'content-type': \"application/json\",\r\n                    'Authorization': AuthToken.token ? `Token ${AuthToken.token}` : ''\r\n                },\r\n                body: JSON.stringify(body)\r\n            })\r\n\r\n            if (response.status >= 200 && response.status <= 299)\r\n                successCallback(response);\r\n            else if (failCallback != null)\r\n                failCallback(response)\r\n            else\r\n                MessageBar.ShowError(`Coś poszło nie tak! POST ${route}`)\r\n        }\r\n        catch {\r\n            MessageBar.ShowError(`Coś poszło nie tak! POST ${route}`)\r\n        }\r\n    }\r\n\r\n    static Delete(route, successCallback) {\r\n        fetch(`${this.backendUrl}${route}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'content-type': \"application/json\",\r\n                'Authorization': AuthToken.token ? `Token ${AuthToken.token}` : ''\r\n            },\r\n        }).then(() => successCallback()).catch(() => MessageBar.ShowError(`Coś poszło nie tak! DELETE ${route}`))\r\n    }\r\n\r\n    static Put(route, body, successCallback) {\r\n        fetch(`${this.backendUrl}${route}/`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                'content-type': \"application/json\",\r\n                'Authorization': AuthToken.token ? `Token ${AuthToken.token}` : ''\r\n            },\r\n            body: JSON.stringify(body)\r\n        }).then((response) => {\r\n            if(response.status >= 200 && response.status <= 299)\r\n                response.json().then((json) => successCallback(json))\r\n            else\r\n                throw new Error('Wrong status')\r\n        }).catch(() => MessageBar.ShowError(`Coś poszło nie tak! PUT ${route}`))\r\n    }\r\n}\r\n\r\nexport default FetchFunctions","import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\nclass AddSong extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            genres: []\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        FetchFunctions.Get('genres', null, (json) => this.setState({\r\n            genres: json\r\n        }))\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            title: this.state.title,\r\n            performer: this.state.performer,\r\n            year: this.state.year,\r\n            genre: this.state.genre,\r\n        }\r\n        FetchFunctions.Post('song', body, (response) => MessageBar.ShowMessage('Dodano piosenkę.'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit.bind(this)}>\r\n                <Form.Label>\r\n                    Tytuł:\r\n                    <Form.Control\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Wykonawca:\r\n                    <Form.Control\r\n                        name=\"performer\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Rok:\r\n                    <Form.Control\r\n                        name=\"year\"\r\n                        type=\"number\"\r\n                        min={1900} max={2021}\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Gatunek:\r\n                    <select className=\"form-control\" name=\"genre\" value={this.state.genre} onChange={this.handleInputChange}>\r\n                        {this.state.genres.map(x => <option key={x} value={x}>{x}</option>)}\r\n                    </select>\r\n                </Form.Label>\r\n                <br />\r\n                <Button type={'submit'}>Wyślij</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSong;","import React, {Component} from 'react';\r\nimport {Button, Col, Form} from \"react-bootstrap\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\nclass AddAlbum extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies;\r\n\r\n        this.state = {\r\n            albumName: \"\",\r\n            isPublic: false,\r\n            userId: this.cookies.get('user_id')\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            name: this.state.albumName,\r\n            public: this.state.isPublic,\r\n            owners: [this.state.userId]\r\n        }\r\n        FetchFunctions.Post(\"album\", body, (response) => MessageBar.ShowMessage('Dodano album.'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '600px'}}>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col>\r\n                            <Form.Control onChange={this.handleInputChange} name={'albumName'} placeholder=\"Nazwa albumu\" />\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 10}} label={\"Publiczny\"} name={'isPublic'} checked={this.state.public} id={0}/>\r\n                        </Col>\r\n                        <Button type={'submit'}>Dodaj album</Button>\r\n                    </Form.Row>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withCookies(AddAlbum);","import React, {Component} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport {Button, Form, FormControl, Nav} from \"react-bootstrap\";\r\nimport {withCookies} from 'react-cookie';\r\nimport {Link} from \"react-router-dom\";\r\nimport Modal from \"./Modal\";\r\nimport AddSong from \"./AddSong\"\r\nimport AddAlbum from \"./AddAlbum\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport MessageBar from \"./MessageBar\";\r\nimport AuthToken from \"./AuthToken\";\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies;\r\n        this.state = {\r\n            displayName: '',\r\n            token: this.cookies.get('token'),\r\n            user_id: '',\r\n            showAddSongModal: false,\r\n            username: '',\r\n            password: ''\r\n        };\r\n\r\n        AuthToken.token = this.cookies.get('token')\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.state.token)\r\n            FetchFunctions.Get('user_info', null, (json) => this.setState({\r\n                displayName: json.username,\r\n                user_id: json.id,\r\n            }))\r\n    }\r\n\r\n    navBarLoggedIn() {\r\n        return (\r\n            <div>\r\n                <Modal enabled={this.state.showAddSongModal} hideModal={() => this.setState({showAddSongModal: false})}>\r\n                    <AddSong/>\r\n                </Modal>\r\n                <Modal enabled={this.state.showAddAlbumModal} hideModal={() => this.setState({showAddAlbumModal: false})}>\r\n                    <AddAlbum/>\r\n                </Modal>\r\n                <Navbar bg=\"dark\" variant=\"dark\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link as={Link} to=\"/songs\">Piosenki</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/albums\">Albumy</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/my_albums\">Moje albumy</Nav.Link>\r\n                        <Nav.Link onClick={() => this.setState({showAddSongModal: true, showAddAlbumModal: false})}>Dodaj piosenkę</Nav.Link>\r\n                        <Nav.Link onClick={() => this.setState({showAddAlbumModal: true, showAddSongModal: false})}>Dodaj album</Nav.Link>\r\n                    </Nav>\r\n                    <Nav.Link as={Link} to=\"/user\">{this.state.displayName}</Nav.Link>\r\n                    <Button onClick={this.logout.bind(this)} variant=\"outline-info\">Wyloguj</Button>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    navBarLoggedOut() {\r\n        return (\r\n            <div>\r\n                    <Navbar bg=\"dark\" variant=\"dark\">\r\n                        {/*<Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>*/}\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link as={Link} to=\"/songs\">Piosenki</Nav.Link>\r\n                            <Nav.Link as={Link} to=\"/albums\">Albumy</Nav.Link>\r\n                        </Nav>\r\n                        <Form inline>\r\n                            <FormControl type=\"text\" value={this.state.username}\r\n                                         onChange={e => this.setState({username: e.target.value})}\r\n                                         placeholder=\"Nazwa użytkownika\" className=\"mr-sm-2\"/>\r\n                            <FormControl type=\"password\" value={this.state.password}\r\n                                         onChange={e => this.setState({password: e.target.value})} placeholder=\"Hasło\"\r\n                                         className=\"mr-sm-2\"/>\r\n                            <Button onClick={() => this.login(this.state.username, this.state.password)}\r\n                                    variant=\"outline-success\">Zaloguj</Button>\r\n                        </Form>\r\n                        <Button href={\"/register\"} variant=\"outline-info\">Zarejestruj</Button>\r\n                    </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    login(username, password) {\r\n        let body = {\r\n            username: username,\r\n            password: password\r\n        }\r\n\r\n        FetchFunctions.Post('api-token-auth', body,\r\n            (response) => response.json().then((json) => {\r\n            this.cookies.set(\"token\", json.token)\r\n            this.cookies.set(\"user_id\", json.user_id)\r\n            window.location.reload()\r\n            }),\r\n            () => {\r\n                MessageBar.ShowError(\"Błąd logowania\")\r\n                this.setState(\r\n                    {\r\n                        token: \"\",\r\n                        user_id: \"\",\r\n                        username: \"\",\r\n                        password: \"\",\r\n                    })\r\n            })\r\n    }\r\n\r\n    logout() {\r\n        this.cookies.remove(\"token\")\r\n        this.cookies.remove(\"user_id\")\r\n        this.setState({\r\n            token: null,\r\n            user_id: null,\r\n            displayName: null,\r\n        }, () => window.location.reload())\r\n    }\r\n\r\n    render() {\r\n        if (this.state.displayName)\r\n            return this.navBarLoggedIn()\r\n        else\r\n            return this.navBarLoggedOut()\r\n    }\r\n}\r\n\r\nexport default withCookies(NavBar);","import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\nclass Registration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n            email: this.state.email,\r\n            first_name: this.state.name,\r\n            last_name: this.state.surname\r\n        }\r\n        FetchFunctions.Post('user', body, (json) => MessageBar.ShowMessage('Zarejestrowano użytkownika.'))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.handleSubmit.bind(this)}>\r\n                <Form.Label>\r\n                    Nazwa użytkownika:\r\n                    <Form.Control\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Hasło:\r\n                    <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Powtórz hasło:\r\n                    <Form.Control\r\n                        name=\"repeatpassword\"\r\n                        type=\"password\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Imię:\r\n                    <Form.Control\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    Nazwisko:\r\n                    <Form.Control\r\n                        name=\"surname\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Form.Label>\r\n                    E-mail:\r\n                    <Form.Control\r\n                        name=\"email\"\r\n                        type=\"text\"\r\n                        onChange={this.handleInputChange} />\r\n                </Form.Label>\r\n                <br />\r\n                <Button type={'submit'}>Wyślij</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;","import React, {Component} from 'react';\r\nimport {HeartFill} from \"react-bootstrap-icons\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass SongListRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            favourite: this.props.favourite\r\n        }\r\n    }\r\n\r\n    setFavourite() {\r\n        if(!this.props.userId) return;\r\n        if(!this.state.favourite)\r\n            FetchFunctions.Post('favourite_song', {\r\n                author: this.props.userId,\r\n                song: this.props.songId,\r\n            }, (response) => response.json()\r\n                .then((json) =>\r\n                this.setState({\r\n                    favourite: json.id\r\n                })))\r\n        else\r\n            FetchFunctions.Delete(`favourite_song/${this.state.favourite}`, () => this.setState({\r\n                favourite: null\r\n            }))\r\n    }\r\n\r\n    navigateToSongDetail(songId) {\r\n        this.props.history.push(`/song/${songId}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td><HeartFill color={this.state.favourite ? \"red\" : \"black\"} onClick={this.setFavourite.bind(this)}/></td>\r\n                <td onClick={() => this.navigateToSongDetail(this.props.songId)}>{this.props.songName}</td>\r\n                <td>{this.props.performer}</td>\r\n                <td>{this.props.genre}</td>\r\n                <td>{this.props.year}</td>\r\n                <td>{this.props.mark}</td>\r\n                <td>{this.props.commentsCount}</td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SongListRow;","import {Button} from \"react-bootstrap\";\r\nimport {ArrowDownShort, ArrowUpShort} from \"react-bootstrap-icons\";\r\nimport React from \"react\";\r\n\r\nclass TableHeadersUtility {\r\n    static buttonStyle = {\r\n        position: 'absolute',\r\n        right: '-12px',\r\n        height: '25px',\r\n    }\r\n\r\n    static buttonUpStyle = {\r\n        top: '-12px',\r\n        borderRadius: '5px 5px 0 0',\r\n    }\r\n\r\n    static buttonDownStyle = {\r\n        top: '12px',\r\n        borderRadius: '0 0 5px 5px',\r\n    }\r\n\r\n    static buttonPressedStyle = {\r\n        color: 'white',\r\n        borderColor: 'rgb(200 200 200)',\r\n        backgroundColor: 'rgb(200 200 200)',\r\n    }\r\n\r\n    static buttonNotPressedStyle = {\r\n        color: 'rgb(200 200 200)',\r\n        borderColor: 'rgb(200 200 200)',\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n    static sortOptions = {\r\n        titleUp: 'title',\r\n        titleDown: '-title',\r\n        nameUp: 'name',\r\n        nameDown: '-name',\r\n        songsCountUp: 'songs_count',\r\n        songsCountDown: '-songs_count',\r\n        performerUp: 'performer',\r\n        performerDown: '-performer',\r\n        genreUp: 'genre',\r\n        genreDown: '-genre',\r\n        yearUp: 'year',\r\n        yearDown: '-year',\r\n        marksUp: 'marks_avg',\r\n        marksDown: '-marks_avg',\r\n        commentsUp: 'comments_count',\r\n        commentsDown: '-comments_count',\r\n    }\r\n\r\n    static getSortButtonVariant(sortOption) {\r\n        return this.state.sortMode === sortOption ? 'secondary' : 'outline-secondary'\r\n    }\r\n\r\n    static changeSortMode(sortMode) {\r\n        let newSortMode = this.state.sortMode === sortMode ? '' : sortMode;\r\n        this.setState({\r\n            sortMode: newSortMode\r\n        })\r\n    }\r\n\r\n    static renderTableHeader(content, sortModeUp, sortModeDown) {\r\n        let colorsStyleUp = this.state.sortMode === sortModeUp ? TableHeadersUtility.buttonPressedStyle : TableHeadersUtility.buttonNotPressedStyle\r\n        let colorsStyleDown = this.state.sortMode === sortModeDown ? TableHeadersUtility.buttonPressedStyle : TableHeadersUtility.buttonNotPressedStyle\r\n\r\n        return <div style={{position: 'relative'}}>\r\n            {content}\r\n            <Button onClick={() => this.changeSortMode(sortModeUp)}\r\n                    variant={this.getSortButtonVariant(sortModeUp)}\r\n                    style={{...TableHeadersUtility.buttonStyle, ...TableHeadersUtility.buttonUpStyle, ...colorsStyleUp}}>\r\n                <ArrowUpShort size={'20px'} style={{margin: '-10px', position: 'relative', top: '-8px'}}/>\r\n            </Button>\r\n            <Button onClick={() => this.changeSortMode(sortModeDown)}\r\n                    variant={this.getSortButtonVariant(sortModeDown)}\r\n                    style={{...TableHeadersUtility.buttonStyle, ...TableHeadersUtility.buttonDownStyle, ...colorsStyleDown}}>\r\n                <ArrowDownShort size={'20px'} style={{margin: '-10px', position: 'relative', top: '-8px'}}/>\r\n            </Button>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default TableHeadersUtility","import React, {Component} from 'react';\r\nimport { Table } from \"react-bootstrap\";\r\nimport { HeartFill, StarFill, ChatRightDots } from 'react-bootstrap-icons';\r\nimport SongListRow from \"./SongListRow\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport TableHeadersUtility from \"./TableHeadersUtility\";\r\n\r\nclass SongList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies\r\n        this.cancelFlag = null\r\n\r\n        this.state = {\r\n            songs: [],\r\n            offset: 0,\r\n            loadMoreButtonText: 'Załaduj kolejne',\r\n            canLoadMoreSongs: true,\r\n            userId: this.cookies.get('user_id'),\r\n            sortMode: ''\r\n        }\r\n\r\n        this.fetchData = this.fetchData.bind(this)\r\n        this.handleFetch = this.handleFetch.bind(this)\r\n        this.changeSortMode = TableHeadersUtility.changeSortMode.bind(this)\r\n        this.getSortButtonVariant = TableHeadersUtility.getSortButtonVariant.bind(this)\r\n        this.renderTableHeader = TableHeadersUtility.renderTableHeader.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.name !== this.props.name || prevProps.genres !== this.props.genres ||\r\n            prevProps.yearTo !== this.props.yearTo || prevProps.yearSince !== this.props.yearSince ||\r\n            prevProps.markInput !== this.props.markInput || prevProps.markLess !== this.props.markLess ||\r\n            prevProps.markEqual !== this.props.markEqual || prevProps.markMore !== this.props.markMore ||\r\n            prevProps.favourite !== this.props.favourite || prevState.sortMode !== this.state.sortMode) {\r\n            this.setState({\r\n                offset: 0,\r\n                songs: [],\r\n                loadMoreButtonText: 'Załaduj kolejne',\r\n                canLoadMoreSongs: true\r\n            }, this.fetchData)\r\n        }\r\n    }\r\n\r\n    chooseMarkInput() {\r\n        if(this.props.markEqual && this.props.markLess)\r\n            return 'lte'\r\n\r\n        if(this.props.markEqual && this.props.markMore)\r\n            return 'gte'\r\n\r\n        if(this.props.markEqual)\r\n            return 'exact'\r\n\r\n        if(this.props.markLess)\r\n            return 'lt'\r\n\r\n        if(this.props.markMore)\r\n            return 'gt'\r\n\r\n        return false\r\n    }\r\n\r\n    prepareParams() {\r\n        let params = {};\r\n\r\n        params.name = this.props.name;\r\n        params.genres = this.props.genres;\r\n        params.yearSince = this.props.yearSince;\r\n        params.yearTo = this.props.yearTo;\r\n        params.albumId = this.props.albumId;\r\n        params.user = this.state.userId;\r\n        params.favourite = this.props.favourite;\r\n        params.offset = this.state.offset;\r\n        params.sortMode = this.state.sortMode;\r\n\r\n        let markFilter = this.chooseMarkInput()\r\n        if(markFilter)\r\n        {\r\n            params.mark = this.props.markInput;\r\n            params.mark_filter = markFilter;\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    handleFetch(json) {\r\n        this.cancelFlag = null\r\n        this.setState((state) => {\r\n            let songsCount = state.songs.length\r\n            let newSongsArray = state.songs.concat(json)\r\n            if (songsCount === newSongsArray.length)\r\n                return {\r\n                    loadMoreButtonText: 'Załadowano wszystkie piosenki spełniające warunki wyszukiwania',\r\n                    canLoadMoreSongs: false\r\n                }\r\n\r\n            return {\r\n                songs: state.songs.concat(json)\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchData() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n        this.cancelFlag = FetchFunctions.Get(\"song\", this.prepareParams(), this.handleFetch)\r\n    }\r\n\r\n    loadMore() {\r\n        if(this.state.canLoadMoreSongs)\r\n            this.setState((state, props) => {\r\n                return {\r\n                    offset: state.offset + 20,\r\n                };\r\n            }, this.fetchData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th><HeartFill/></th>\r\n                        <th>\r\n                            {this.renderTableHeader('Nazwa', TableHeadersUtility.sortOptions.titleUp, TableHeadersUtility.sortOptions.titleDown)}\r\n                        </th>\r\n                        <th>\r\n                            {this.renderTableHeader('Wykonawca', TableHeadersUtility.sortOptions.performerUp, TableHeadersUtility.sortOptions.performerDown)}\r\n                        </th>\r\n                        <th>\r\n                            {this.renderTableHeader('Gatunek', TableHeadersUtility.sortOptions.genreUp, TableHeadersUtility.sortOptions.genreDown)}\r\n                        </th>\r\n                        <th>\r\n                            {this.renderTableHeader('Rok', TableHeadersUtility.sortOptions.yearUp, TableHeadersUtility.sortOptions.yearDown)}\r\n                        </th>\r\n                        <th>\r\n                            {this.renderTableHeader(<StarFill/>, TableHeadersUtility.sortOptions.marksUp, TableHeadersUtility.sortOptions.marksDown)}\r\n                        </th>\r\n                        <th>\r\n                            {this.renderTableHeader(<ChatRightDots/>, TableHeadersUtility.sortOptions.commentsUp, TableHeadersUtility.sortOptions.commentsDown)}\r\n                        </th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.songs.map(x =>\r\n                        <SongListRow key={x.id} userId={this.state.userId} songId={x.id} songName={x.title} performer={x.performer}\r\n                                     genre={x.genre} year={x.year} mark={x.marks_avg ? x.marks_avg.toPrecision(2) : '-'}\r\n                                     commentsCount={x.comments_count} favourite={x.favourite} history={this.props.history}/>)}\r\n                    <tr>\r\n                        <td colSpan={7} onClick={this.loadMore.bind(this)}>\r\n                            {this.state.loadMoreButtonText}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(SongList);","import React, {Component} from 'react';\r\nimport {Col, Dropdown, Form} from \"react-bootstrap\";\r\nimport SongList from \"./SongList\";\r\nimport DropdownMenu from \"react-bootstrap/DropdownMenu\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass Songs extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cancelFlag = null\r\n        this.state = {\r\n            genres: [],\r\n            genresInput: [],\r\n            nameInput: \"\",\r\n            yearSince: 1900,\r\n            yearTo: 2021,\r\n            markInput: 5,\r\n            markLess: false,\r\n            markMore: false,\r\n            markEqual: false,\r\n            favourite: false,\r\n            genresText: \"\",\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleGenreCheckboxChange = this.handleGenreCheckboxChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.cancelFlag = FetchFunctions.Get(\"genres\", null,\r\n            (json) => {\r\n                this.setState({\r\n                    genres: json\r\n                })\r\n                this.cancelFlag = null\r\n            });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if (name === 'markLess')\r\n            this.setState({\r\n                [name]: value,\r\n                markMore: false\r\n            })\r\n        else if (name === 'markMore')\r\n            this.setState({\r\n                [name]: value,\r\n                markLess: false\r\n            })\r\n        else\r\n            this.setState({\r\n                [name]: value\r\n            });\r\n    }\r\n\r\n    handleGenreCheckboxChange(event) {\r\n        const target = event.target;\r\n        const value = target.checked;\r\n        const name = target.name;\r\n\r\n        const genresInput = this.state.genresInput\r\n        if (value)\r\n            genresInput.push(name)\r\n        else\r\n            for (let i = 0; i < genresInput.length; i++) {\r\n                if (genresInput[i] === name) {\r\n                    genresInput.splice(i, 1);\r\n                }\r\n            }\r\n\r\n        this.setState({\r\n            genresInput: genresInput\r\n        }, this.createGenresString);\r\n    }\r\n\r\n    createGenresString() {\r\n        let genresString = this.state.genresInput.join(',')\r\n        this.setState({\r\n            genresText: genresString\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form style={{marginBottom: 20}}>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col md={2}>\r\n                            <Form.Control onChange={this.handleInputChange} name={'nameInput'}\r\n                                          placeholder=\"Nazwa piosenki lub wykonawcy\"/>\r\n                        </Col>\r\n                        <Col md={0.5} style={{marginLeft: 10, marginRight: 30}}>\r\n                            <Dropdown>\r\n                                <Dropdown.Toggle variant=\"outline-primary\" id=\"dropdown-basic\">\r\n                                    Gatunki\r\n                                </Dropdown.Toggle>\r\n                                <DropdownMenu style={{margin: '100'}}>\r\n                                    {this.state.genres.map(x => <Form.Check onChange={this.handleGenreCheckboxChange}\r\n                                                                            key={x} name={x} style={{marginLeft: 10}}\r\n                                                                            label={x} type={'checkbox'}/>)}\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Col>\r\n                        <Col md={0.5}>\r\n                            Rok od\r\n                        </Col>\r\n                        <Col md={0.5}>\r\n                            <Form.Control onChange={this.handleInputChange} name={'yearSince'} type={'number'}\r\n                                          value={this.state.yearSince} min={1900} max={2021}/>\r\n                        </Col>\r\n                        <Col md={0.5}>\r\n                            do\r\n                        </Col>\r\n                        <Col md={0.5}>\r\n                            <Form.Control onChange={this.handleInputChange} name={'yearTo'} type={'number'}\r\n                                          value={this.state.yearTo} min={1900} max={2021}/>\r\n                        </Col>\r\n                        <Col md={0.5} style={{marginLeft: 30}}>\r\n                            Ocena\r\n                        </Col>\r\n                        <Col md={0.25}>\r\n                            <Form.Control onChange={this.handleInputChange} name={'markInput'} type={'number'}\r\n                                          value={this.state.markInput} step={0.1} min={1} max={5}/>\r\n                        </Col>\r\n                        <Col md={0.25}>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 10}}\r\n                                        label={\"Mniejsza\"} name={'markLess'} checked={this.state.markLess} id={1}/>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 10}}\r\n                                        label={\"Większa\"} name={'markMore'} checked={this.state.markMore} id={2}/>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 10}}\r\n                                        label={\"Równa\"} name={'markEqual'} checked={this.state.markEqual} id={3}/>\r\n                        </Col>\r\n                        <Col md={0.25}>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 20}}\r\n                                        label={\"Ulubione\"} name={\"favourite\"} checked={this.state.favourite} id={4}/>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <SongList name={this.state.nameInput} genres={this.state.genresText} yearSince={this.state.yearSince}\r\n                          yearTo={this.state.yearTo} markInput={this.state.markInput} markLess={this.state.markLess}\r\n                          markMore={this.state.markMore} markEqual={this.state.markEqual} history={this.props.history}\r\n                          favourite={this.state.favourite}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Songs;","import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass AddCommentBox extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.sendComment = this.sendComment.bind(this)\r\n\r\n        this.state = {\r\n            textboxContent: \"\"\r\n        }\r\n    }\r\n\r\n    sendComment(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            token: this.props.token,\r\n            song: this.props.songId,\r\n            album: this.props.albumId,\r\n            content: this.state.textboxContent\r\n        }\r\n\r\n        FetchFunctions.Post(this.props.commentAPILink, body, () => window.location.reload())\r\n    }\r\n\r\n    handleOnChange(event) {\r\n        this.setState({\r\n            textboxContent: event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form style={{textAlign: 'left'}} onSubmit={this.sendComment}>\r\n                    <Form.Label style={{paddingLeft: 10}}>Dodaj komentarz:</Form.Label>\r\n                    <Form.Control as={'textarea'} rows={5} value={this.state.textboxContent} onChange={this.handleOnChange.bind(this)}/>\r\n                    <Button type={'submit'} className={'float-right'}>Dodaj komentarz</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCommentBox;","import React, {Component} from 'react';\r\n\r\nclass Comment extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <tr>\r\n                    <td align={\"left\"}>{this.props.username} {this.props.date}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td align={\"left\"}>{this.props.text}</td>\r\n                </tr>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comment;","import React, {Component} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport Comment from \"./Comment\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass CommentsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cancelFlag = null\r\n        this.state = {\r\n            comments: [],\r\n            offset: 0,\r\n            canLoadMoreComments: true\r\n        }\r\n\r\n        this.loadMoreComments = this.loadMoreComments.bind(this)\r\n        this.handleFetch = this.handleFetch.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    loadMoreComments() {\r\n        this.setState((state) => {\r\n            return {\r\n                offset: state.offset + 1\r\n            }\r\n        }, this.fetchData)\r\n    }\r\n\r\n    handleFetch(json) {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag = null\r\n\r\n        this.setState((state) => {\r\n            let commentsCount = state.comments.length\r\n            let fetchedData = json\r\n            fetchedData.forEach(x => x.date = new Date(x.create_date))\r\n            fetchedData = fetchedData.sort((a, b) => a.date < b.date ? 1 : a.date > b.date ? -1 : 0)\r\n            let newCommentsArray = state.comments.concat(fetchedData)\r\n            if(commentsCount === newCommentsArray.length)\r\n                return {\r\n                    canLoadMoreComments: false\r\n                }\r\n\r\n            return {\r\n                comments: newCommentsArray\r\n            }\r\n        })\r\n    }\r\n\r\n    fetchData() {\r\n        let params = {\r\n            targetId: this.props.targetId,\r\n            offset: this.state.offset\r\n        }\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n\r\n        this.cancelFlag = FetchFunctions.Get(this.props.commentAPILink, params, this.handleFetch)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: 60}}>\r\n                <Table striped hover>\r\n                    <tbody>\r\n                    {this.state.comments.map(x => {\r\n                        return <Comment key={x.id} username={x.username} text={x.content} date={x.date.toLocaleString()}/>\r\n                    })}\r\n                    {this.state.canLoadMoreComments ?\r\n                        <tr>\r\n                            <td onClick={this.loadMoreComments}>\r\n                                Załaduj więcej komentarzy\r\n                            </td>\r\n                        </tr>\r\n                        :\r\n                        <tr>\r\n                            <td onClick={this.loadMoreComments}>\r\n                                Załadowano wszystkie komentarze\r\n                            </td>\r\n                        </tr>}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentsList;","import React, {Component} from 'react';\r\nimport {StarFill} from \"react-bootstrap-icons\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass Mark extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cancelFlagMarks = null\r\n        this.cancelFlagAuthor = null\r\n\r\n        this.state = {\r\n            starsColor: ['black', 'black', 'black', 'black', 'black'],\r\n            mark: 5\r\n        }\r\n\r\n        this.onMouseEnterStar = this.onMouseEnterStar.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let params = {\r\n            targetId: this.props.targetId\r\n        }\r\n\r\n        if(this.cancelFlagMarks)\r\n            this.cancelFlagMarks.cancel = true\r\n\r\n        this.cancelFlagMarks = FetchFunctions.Get(this.props.markAPILink, params, (json) =>\r\n            this.setState({\r\n                mark: json.avg ? json.avg.toPrecision(2) : \"Brak ocen\"\r\n            }))\r\n\r\n        if(this.props.token)\r\n        {\r\n            let params = {\r\n                token: this.props.token,\r\n                targetId: this.props.targetId\r\n            }\r\n            if(this.cancelFlagAuthor)\r\n                this.cancelFlagAuthor = true\r\n\r\n            this.cancelFlagAuthor = FetchFunctions.Get(this.props.markAuthorAPILink, params, (json) =>\r\n                this.setState({\r\n                    myMark: json ? json.mark : '-'\r\n                }, () => this.onMouseEnterStar(json.mark - 1)))\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.cancelFlagMarks)\r\n            this.cancelFlagMarks.cancel = true\r\n        if(this.cancelFlagAuthor)\r\n            this.cancelFlagAuthor.cancel = true\r\n    }\r\n\r\n    sendMark(mark) {\r\n        let body = {\r\n            author: this.props.token,\r\n            song: this.props.targetId,\r\n            album: this.props.targetId,\r\n            mark: mark\r\n        }\r\n\r\n        FetchFunctions.Put(this.props.markAuthorAPILink, body, (json) => this.setState({\r\n            myMark: json.mark\r\n        }))\r\n    }\r\n\r\n    onMouseEnterStar(starIndex) {\r\n        let newArray = this.state.starsColor.slice()\r\n        for(let i = starIndex; i >= 0; i--)\r\n            newArray[i] = 'yellow'\r\n        for(let i = starIndex + 1; i < 5; i++)\r\n            newArray[i] = 'black'\r\n\r\n        this.setState({\r\n            starsColor: newArray\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td width={250} align={\"left\"} colSpan={1} className={'m-auto'}>Ocena: {this.state.mark}<br/>Twoja ocena: {this.state.myMark}</td>\r\n                {this.props.token ?\r\n                    <td width={200} align={\"left\"} colSpan={1}\r\n                        onMouseLeave={() => this.onMouseEnterStar(typeof this.state.myMark == 'number' ? this.state.myMark - 1 : -1)}>\r\n                        <StarFill onMouseEnter={() => this.onMouseEnterStar(0)} onClick={() => this.sendMark(1)} size={35}\r\n                                  color={this.state.starsColor[0]}/>\r\n                        <StarFill onMouseEnter={() => this.onMouseEnterStar(1)} onClick={() => this.sendMark(2)} size={35}\r\n                                  color={this.state.starsColor[1]}/>\r\n                        <StarFill onMouseEnter={() => this.onMouseEnterStar(2)} onClick={() => this.sendMark(3)} size={35}\r\n                                  color={this.state.starsColor[2]}/>\r\n                        <StarFill onMouseEnter={() => this.onMouseEnterStar(3)} onClick={() => this.sendMark(4)} size={35}\r\n                                  color={this.state.starsColor[3]}/>\r\n                        <StarFill onMouseEnter={() => this.onMouseEnterStar(4)} onClick={() => this.sendMark(5)} size={35}\r\n                                  color={this.state.starsColor[4]}/>\r\n                    </td>\r\n                    :\r\n                    <td>\r\n                        Zaloguj się, żeby ocenić.\r\n                    </td>\r\n                }\r\n                <td></td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Mark;","import React, {Component} from 'react';\r\nimport {Button, Form, Table} from \"react-bootstrap\";\r\nimport AddCommentBox from \"./AddCommentBox\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport Mark from \"./Mark\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass SongDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies;\r\n        this.state = {\r\n            token: this.cookies.get('token'),\r\n\r\n            songName: \"Nazwa piosenki\",\r\n            songPerformer: \"Wykonawca\",\r\n            songYear: \"2000\",\r\n            songGenre: \"Gatunek\",\r\n            userId: this.cookies.get('user_id'),\r\n            albumId: 0,\r\n        }\r\n\r\n        this.submitAddToAlbum = this.submitAddToAlbum.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        FetchFunctions.Get(`song/${this.props.match.params.id}`, null, (json) => this.setState({\r\n            songName: json.title,\r\n            songPerformer: json.performer,\r\n            songYear: json.year,\r\n            songGenre: json.genre,\r\n        }))\r\n\r\n        if(this.state.token) {\r\n                let params = {\r\n                    user: this.state.userId,\r\n                    private: true,\r\n                    get_all: true,\r\n                }\r\n                FetchFunctions.Get('album', params, (json) => this.setState({\r\n                    albums: json,\r\n                    albumId: json[0] ? json[0].id : 0\r\n                }))\r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    submitAddToAlbum(event) {\r\n        event.preventDefault()\r\n\r\n        FetchFunctions.Put(`album/${this.state.albumId}`, {\r\n            add_song: this.props.match.params.id\r\n        }, (response) => alert(response))\r\n    }\r\n\r\n    renderAddToAlbum() {\r\n        return(\r\n            <Form style={{marginBottom: 20, marginLeft: 8, marginRight: 20}} onSubmit={this.submitAddToAlbum}>\r\n                <Form.Row style={{paddingLeft: 4}}>\r\n                    <Form.Label>Nazwa albumu:</Form.Label>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                    <select className=\"form-control\" style={{width: '25%'}} name=\"albumId\" value={this.state.albumId} onChange={this.handleInputChange}>\r\n                        {this.state.albums.map((x, i) => <option key={x.id} value={x.id}>{x.name}</option>)}\r\n                    </select>\r\n                    <Button type={'submit'}>Dodaj do album</Button>\r\n                </Form.Row>\r\n            </Form>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                        <tr><td align={\"left\"} colSpan={5}>{this.state.songName}</td></tr>\r\n                        <tr><td align={\"left\"} colSpan={5}>{this.state.songPerformer}</td></tr>\r\n                        <tr><td align={\"left\"} colSpan={5}>{this.state.songYear}</td></tr>\r\n                        <tr><td align={\"left\"} colSpan={5}>{this.state.songGenre}</td></tr>\r\n                        <Mark targetId={this.props.match.params.id} token={this.state.token} markAPILink={\"song_mark\"} markAuthorAPILink={\"song_mark_author\"}/>\r\n                    </tbody>\r\n                </Table>\r\n                {this.state.albums && this.state.albums.length !== 0 ? this.renderAddToAlbum() : \"\"}\r\n                {this.state.token ?\r\n                <AddCommentBox commentAPILink={\"song_comment\"} songId={this.props.match.params.id} token={this.state.token}/>\r\n                    : \"Zaloguj się, żeby dodać komentarz\"}\r\n                <CommentsList commentAPILink={\"song_comment\"} targetId={this.props.match.params.id}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withCookies(SongDetail);","import React, {Component} from 'react';\r\nimport { EnvelopeFill, HeartFill} from \"react-bootstrap-icons\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass AlbumListRow extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            favourite: this.props.favourite\r\n        }\r\n    }\r\n\r\n    setFavourite() {\r\n        if(!this.props.userId) return;\r\n        if(!this.state.favourite)\r\n        {\r\n            let body = {\r\n                author: this.props.userId,\r\n                album: this.props.albumId,\r\n            }\r\n            FetchFunctions.Post('favourite_album', body, (response) => response.json()\r\n                .then((json) => this.setState({\r\n                favourite: json.id\r\n            })))\r\n        }\r\n        else\r\n            FetchFunctions.Delete(`favourite_album/${this.state.favourite}`, () => this.setState({\r\n                favourite: null\r\n            }))\r\n    }\r\n\r\n    navigateToAlbumDetail(albumId) {\r\n        this.props.history.push(`/album/${albumId}`)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td><HeartFill color={this.state.favourite ? \"red\" : \"black\"} onClick={this.setFavourite.bind(this)}/></td>\r\n                <td onClick={() => this.navigateToAlbumDetail(this.props.albumId)}>{this.props.albumName}</td>\r\n                <td>{this.props.songsCount}</td>\r\n                <td>{this.props.mark}</td>\r\n                <td>{this.props.commentsCount}</td>\r\n                {this.props.showModal ? <td onClick={this.props.showModal}><EnvelopeFill/></td> : null}\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumListRow;","import React, {Component} from 'react';\r\nimport {Button, Col, Form} from \"react-bootstrap\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass AlbumInvitation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            errorMessage: '',\r\n        }\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            username: this.state.username,\r\n            album: this.props.albumId\r\n        }\r\n        FetchFunctions.Post('album_invitation', body,\r\n            () => this.setState({\r\n                errorMessage: '',\r\n                successMessage: 'Wysłano zaproszenie.'\r\n            }),\r\n            (response) => {\r\n                response.json().then((json) => this.setState(\r\n                    {\r\n                        errorMessage: json,\r\n                        successMessage: ''\r\n                    }\r\n                ))\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h4>Zaproś do albumu</h4>\r\n                <br/>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col>\r\n                            <Form.Control onChange={this.handleInputChange} name={'username'} placeholder=\"Nazwa użytkownika\" />\r\n                        </Col>\r\n                        <Button type={'submit'}>Zaproś</Button>\r\n                    </Form.Row>\r\n                </Form>\r\n                <br/>\r\n                <label style={{color: 'red'}}>{this.state.errorMessage}</label>\r\n                <label style={{color: 'green'}}>{this.state.successMessage}</label>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AlbumInvitation;","import React, {Component} from 'react';\r\nimport {CheckLg, XLg} from \"react-bootstrap-icons\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass AlbumInvitationListRow extends Component {\r\n    answerInvitation(accept) {\r\n        FetchFunctions.Post('album_invitation_user', {albumInvitation: this.props.id, accept: accept ? 1 : 0}, () => window.location.reload())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr>\r\n                <td>{this.props.albumName}</td>\r\n                <td>{this.props.songsCount}</td>\r\n                <td>{this.props.mark}</td>\r\n                <td>{this.props.commentsCount}</td>\r\n                <td onClick={() => this.answerInvitation(true)}><CheckLg color={'green'}/></td>\r\n                <td onClick={() => this.answerInvitation(false)}><XLg color={'red'}/></td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AlbumInvitationListRow;","import React, {Component} from 'react';\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport {CheckLg, XLg} from \"react-bootstrap-icons\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport AlbumInvitationListRow from \"./AlbumInvitationListRow\";\r\n\r\nclass AlbumInvitationList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies\r\n\r\n        this.cancelFlag = null\r\n        this.state = {\r\n            userId: this.cookies.get('user_id'),\r\n            albums: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n\r\n        this.cancelFlag = FetchFunctions.Get(`album_invitation_user/${this.state.userId}`, null,\r\n            (json) => {\r\n                this.setState({\r\n                    albums: json.results\r\n                })\r\n                this.cancelFlag = null\r\n            }\r\n        )\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 style={{textAlign: 'left', marginLeft: '15px'}}>Zaproszenia</h2>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>Nazwa</th>\r\n                        <th>Piosenki</th>\r\n                        <th>Ocena</th>\r\n                        <th>Komentarze</th>\r\n                        <th><CheckLg/></th>\r\n                        <th><XLg/></th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.albums.map(x =>\r\n                        <AlbumInvitationListRow id={x.id} key={x.album} albumName={x.album_name}\r\n                                                songsCount={x.songs_count} mark={x.marks_avg}\r\n                                                commentsCount={x.comments_count} albumId={x.album}/>)}\r\n                    </tbody>\r\n                </Table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(AlbumInvitationList);","import React, {Component} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport {HeartFill, StarFill, ChatRightDots, Envelope } from 'react-bootstrap-icons';\r\nimport AlbumListRow from \"./AlbumListRow\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport Modal from \"./Modal\";\r\nimport AlbumInvitation from \"./AlbumInvitation\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport AlbumInvitationList from \"./AlbumInvitationList\";\r\nimport TableHeadersUtility from \"./TableHeadersUtility\";\r\n\r\nclass AlbumList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies\r\n        this.cancelFlag = null\r\n\r\n        this.state = {\r\n            albums: [],\r\n            page: 0,\r\n            loadMoreButtonText: 'Załaduj kolejne',\r\n            canLoadMoreAlbums: true,\r\n            userId: this.cookies.get('user_id'),\r\n            showModal: false,\r\n            sortMode: '',\r\n        }\r\n\r\n        this.fetchData = this.fetchData.bind(this)\r\n        this.prepareParams = this.prepareParams.bind(this)\r\n        this.handleFetch = this.handleFetch.bind(this)\r\n        this.changeSortMode = TableHeadersUtility.changeSortMode.bind(this)\r\n        this.getSortButtonVariant = TableHeadersUtility.getSortButtonVariant.bind(this)\r\n        this.renderTableHeader = TableHeadersUtility.renderTableHeader.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.name !== this.props.name || prevProps.favourite !== this.props.favourite\r\n            || prevProps.myAlbums !== this.props.myAlbums || prevState.sortMode !== this.state.sortMode) {\r\n            this.setState({\r\n                page: 0,\r\n                albums: [],\r\n                loadMoreButtonText: 'Załaduj kolejne',\r\n                canLoadMoreAlbums: true\r\n            }, this.fetchData)\r\n        }\r\n    }\r\n\r\n    prepareParams() {\r\n        let params = {};\r\n\r\n        params.name = this.props.name;\r\n        params.page = this.state.page;\r\n        params.favourite = this.props.favourite;\r\n        params.user = this.state.userId;\r\n        params.private = this.props.myAlbums;\r\n        params.sortMode = this.state.sortMode;\r\n\r\n        return params;\r\n    }\r\n\r\n    fetchData() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n        this.cancelFlag = FetchFunctions.Get('album', this.prepareParams(), this.handleFetch)\r\n    }\r\n\r\n    handleFetch(json) {\r\n        this.cancelFlag = null\r\n        this.setState((state) => {\r\n            let albumsCount = state.albums.length\r\n            let newAlbumsArray = state.albums.concat(json)\r\n            if(albumsCount === newAlbumsArray.length)\r\n                return {\r\n                    loadMoreButtonText: 'Załadowano wszystkie albumy spełniające warunki wyszukiwania',\r\n                    canLoadMoreAlbums: false\r\n                }\r\n\r\n            return {\r\n                albums: state.albums.concat(json)\r\n            }\r\n        })\r\n    }\r\n\r\n    loadMore() {\r\n        if(this.state.canLoadMoreAlbums)\r\n            this.setState((state, props) => {\r\n                return {\r\n                    page: state.page + 1,\r\n                };\r\n            }, this.fetchData);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal enabled={this.state.showModal} hideModal={() => this.setState({showModal: false})}>\r\n                    <AlbumInvitation albumId = {this.state.albumId}/>\r\n                </Modal>\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><HeartFill/></th>\r\n                            <th>\r\n                                {this.renderTableHeader('Nazwa', TableHeadersUtility.sortOptions.nameUp, TableHeadersUtility.sortOptions.nameDown)}\r\n                            </th>\r\n                            <th>\r\n                                {this.renderTableHeader('Piosenki', TableHeadersUtility.sortOptions.songsCountUp, TableHeadersUtility.sortOptions.songsCountDown)}\r\n                            </th>\r\n                            <th>\r\n                                {this.renderTableHeader(<StarFill/>, TableHeadersUtility.sortOptions.marksUp, TableHeadersUtility.sortOptions.marksDown)}\r\n                            </th>\r\n                            <th>\r\n                                {this.renderTableHeader(<ChatRightDots/>, TableHeadersUtility.sortOptions.commentsUp, TableHeadersUtility.sortOptions.commentsDown)}\r\n                            </th>\r\n                            {this.props.myAlbums ? <th><Envelope/></th> : null}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.state.albums.map(x =>\r\n                        <AlbumListRow key={x.id} albumName={x.name} songsCount={x.songs_count} mark={x.marks_avg}\r\n                                      commentsCount={x.comments_count} albumId={x.id} history={this.props.history}\r\n                                      favourite={x.favourite} userId={this.state.userId} showModal={this.props.myAlbums ? () => this.setState({showModal: true, albumId: x.id}) : null}/>)}\r\n                    <tr>\r\n                        <td colSpan={6} onClick={this.loadMore.bind(this)}>\r\n                            {this.state.loadMoreButtonText}\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                {this.props.myAlbums ? <AlbumInvitationList/> : \"\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(AlbumList);","import React, {Component} from 'react';\r\nimport {Col, Form} from \"react-bootstrap\";\r\nimport AlbumList from \"./AlbumList\";\r\n\r\nclass Albums extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nameInput: \"\",\r\n            favourite: false,\r\n            public: false,\r\n            myAlbums: this.props.myAlbums\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(prevProps.myAlbums !== this.props.myAlbums)\r\n            this.setState({\r\n                myAlbums: this.props.myAlbums\r\n            })\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.type === 'checkbox' ? event.target.checked : event.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form style={{marginBottom: 20}}>\r\n                    <Form.Row className=\"align-items-center\">\r\n                        <Col md={2}>\r\n                            <Form.Control onChange={this.handleInputChange} name={'nameInput'} placeholder=\"Nazwa albumu\" />\r\n                        </Col>\r\n                        <Col md={0.25}>\r\n                            <Form.Check onChange={this.handleInputChange} inline style={{marginLeft: 10}} label={\"Ulubione\"} name={'favourite'} checked={this.state.favourite} id={0}/>\r\n                        </Col>\r\n                    </Form.Row>\r\n                </Form>\r\n                <AlbumList name={this.state.nameInput} history={this.props.history} favourite={this.state.favourite} myAlbums={this.state.myAlbums}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Albums;","import React, {Component} from 'react';\r\nimport {Table} from \"react-bootstrap\";\r\nimport Mark from \"./Mark\";\r\nimport AddCommentBox from \"./AddCommentBox\";\r\nimport CommentsList from \"./CommentsList\";\r\nimport {withCookies} from \"react-cookie\";\r\nimport SongList from \"./SongList\";\r\nimport FetchFunctions from \"./FetchFunctions\";\r\n\r\nclass AlbumDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cookies = props.cookies;\r\n        this.cancelFlag = null\r\n\r\n        this.state = {\r\n            token: this.cookies.get('token'),\r\n            name: \"\",\r\n            author: \"\",\r\n            mark: \"\",\r\n            songs: \"\",\r\n            canLoadMoreSongs: true,\r\n            comments: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n        \r\n        this.cancelFlag = FetchFunctions.Get(`album/${this.props.match.params.id}`, null,\r\n            (json) => {\r\n            this.cancelFlag = null\r\n            this.setState({\r\n                albumName: json.name,\r\n            })\r\n        })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if(this.cancelFlag)\r\n            this.cancelFlag.cancel = true\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr><td align={\"left\"} colSpan={5}>{this.state.albumName}</td></tr>\r\n                    <Mark targetId={this.props.match.params.id} token={this.state.token} markAPILink={\"album_mark\"} markAuthorAPILink={\"album_mark_author\"}/>\r\n                    </tbody>\r\n                </Table>\r\n                <SongList albumId={this.props.match.params.id} history={this.props.history}/>\r\n                {this.state.token ?\r\n                    <AddCommentBox commentAPILink={\"album_comment\"} albumId={this.props.match.params.id} token={this.state.token}/>\r\n                    : \"Zaloguj się, żeby dodać komentarz\"}\r\n                <CommentsList commentAPILink={\"album_comment\"} targetId={this.props.match.params.id}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withCookies(AlbumDetail);","import React from 'react';\r\n\r\nconst MyComponent = () => {\r\n    return (\r\n        <div>\r\n            <h1>Błąd 404</h1>\r\n            <h3>Nie znaleziono strony</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyComponent;\r\n","import React, {Component} from 'react';\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport MessageBar from \"./MessageBar\";\r\n\r\nclass ConfirmPassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault()\r\n\r\n        if(!this.state.password) {\r\n            MessageBar.ShowError('Podaj hasło')\r\n            return\r\n        }\r\n\r\n        this.props.callbackParam.check_password = this.state.password\r\n\r\n        this.props.callback(this.props.callbackParam)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form onSubmit={this.handleSubmit.bind(this)}>\r\n                    <Form.Label>\r\n                        Podaj hasło:\r\n                        <Form.Control\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            onChange={this.handleInputChange} />\r\n                    </Form.Label>\r\n                    <Button type={'submit'} style={{...this.marginLeft10px, marginBottom: '7px'}}>Zmień</Button>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmPassword;","import React, {Component} from 'react';\r\nimport FetchFunctions from \"./FetchFunctions\";\r\nimport MessageBar from \"./MessageBar\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport Modal from \"./Modal\";\r\nimport ConfirmPassword from \"./ConfirmPassword\";\r\n\r\nclass UserPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.cancelFlag = null\r\n        this.state = {\r\n            first_name_placeholder: '',\r\n            last_name_placeholder: '',\r\n            email_placeholder: ''\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.cancelFlag = FetchFunctions.Get('user_info', null,\r\n            (json) => {\r\n                this.setState({\r\n                    first_name_placeholder: json.first_name,\r\n                    last_name_placeholder: json.last_name,\r\n                    email_placeholder: json.email\r\n                })\r\n                this.cancelFlag = null\r\n            })\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmitPassword(event) {\r\n        event.preventDefault()\r\n\r\n        if (!this.state.newPassword || this.state.newPassword !== this.state.newPasswordConfirm) {\r\n            MessageBar.ShowError('Hasła różnią się.')\r\n            return\r\n        }\r\n\r\n        let body = {\r\n            password: this.state.newPassword,\r\n        }\r\n\r\n        this.setState({\r\n            passwordCallback: (body) => FetchFunctions.Put('user_detail', body, (response) => this.successCallback('Zmieniono hasło.')),\r\n            showModal: true,\r\n            body: body\r\n        })\r\n    }\r\n\r\n    handleSubmitNames(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            first_name: this.state.first_name,\r\n            last_name: this.state.last_name\r\n        }\r\n\r\n        this.setState({\r\n            passwordCallback: (body) => FetchFunctions.Put('user_detail', body, (response) => this.successCallback('Zmieniono dane.')),\r\n            showModal: true,\r\n            body: body\r\n        })\r\n    }\r\n\r\n    handleSubmitEmail(event) {\r\n        event.preventDefault()\r\n\r\n        let body = {\r\n            email: this.state.email,\r\n        }\r\n\r\n        this.setState({\r\n            passwordCallback: (body) => FetchFunctions.Put('user_detail', body, (response) => this.successCallback('Zmieniono adres e-mail.')),\r\n            showModal: true,\r\n            body: body\r\n        })\r\n    }\r\n\r\n    successCallback(message) {\r\n        MessageBar.ShowMessage(message)\r\n        this.setState({\r\n            showModal: false\r\n        })\r\n    }\r\n\r\n    marginLeft10px = {\r\n        marginLeft: '10px'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{marginTop: '30px'}}>\r\n                <h3>Zmień hasło</h3>\r\n                <Form onSubmit={this.handleSubmitPassword.bind(this)}>\r\n                    <Form.Label>\r\n                        Nowe hasło:\r\n                        <Form.Control\r\n                            name=\"newPassword\"\r\n                            type=\"password\"\r\n                            onChange={this.handleInputChange}/>\r\n                    </Form.Label>\r\n                    <Form.Label style={this.marginLeft10px}>\r\n                        Powtórz nowe hasło:\r\n                        <Form.Control\r\n                            name=\"newPasswordConfirm\"\r\n                            type=\"password\"\r\n                            onChange={this.handleInputChange}/>\r\n                    </Form.Label>\r\n                    <Button type={'submit'} style={{...this.marginLeft10px, marginBottom: '7px'}}>Zmień</Button>\r\n                </Form>\r\n                <br/>\r\n                <br/>\r\n                <h3>Zmień dane</h3>\r\n                <Form onSubmit={this.handleSubmitNames.bind(this)}>\r\n                    <Form.Label>\r\n                        Imię:\r\n                        <Form.Control\r\n                            placeholder={this.state.first_name_placeholder}\r\n                            name=\"first_name\"\r\n                            type=\"text\"\r\n                            onChange={this.handleInputChange}/>\r\n                    </Form.Label>\r\n                    <Form.Label style={this.marginLeft10px}>\r\n                        Nazwisko:\r\n                        <Form.Control\r\n                            placeholder={this.state.last_name_placeholder}\r\n                            name=\"last_name\"\r\n                            type=\"text\"\r\n                            onChange={this.handleInputChange}/>\r\n                    </Form.Label>\r\n                    <Button type={'submit'} style={{...this.marginLeft10px, marginBottom: '7px'}}>Zmień</Button>\r\n                </Form>\r\n                <br/>\r\n                <br/>\r\n                <h3>Zmień adres e-mail</h3>\r\n                <Form onSubmit={this.handleSubmitEmail.bind(this)}>\r\n                    <Form.Label>\r\n                        E-mail:\r\n                        <Form.Control\r\n                            placeholder={this.state.email_placeholder}\r\n                            name=\"email\"\r\n                            type=\"text\"\r\n                            onChange={this.handleInputChange}/>\r\n                    </Form.Label>\r\n                    <Button type={'submit'} style={{...this.marginLeft10px, marginBottom: '7px'}}>Zmień</Button>\r\n                </Form>\r\n\r\n                <Modal enabled={this.state.showModal} hideModal={() => this.setState({showModal: false})}>\r\n                    <ConfirmPassword callback={this.state.passwordCallback} callbackParam={this.state.body}/>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserPanel;","import './App.css';\r\nimport NavBar from \"./NavBar\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Registration from \"./Registration\";\r\nimport Songs from \"./Songs\";\r\nimport SongDetail from \"./SongDetail\";\r\nimport Albums from \"./Albums\";\r\nimport AlbumDetail from \"./AlbumDetail\";\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport MessageBar from \"./MessageBar\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport UserPanel from \"./UserPanel\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <BrowserRouter>\r\n            <MessageBar/>\r\n            <NavBar/>\r\n            <br/>\r\n            <Switch>\r\n                <Route path=\"/musicreact/songs\" component={Songs}/>\r\n                <Route path=\"/musicreact/register\" component={Registration}/>\r\n                <Route path=\"/musicreact/song/:id\" component={SongDetail}/>\r\n                <Route path=\"/musicreact/albums\" render={(props) => (\r\n                    <Albums {...props} myAlbums={false} />\r\n                )}/>\r\n                <Route path=\"/musicreact/my_albums\" render={(props) => (\r\n                    <Albums {...props} myAlbums={true} />\r\n                )}/>\r\n                <Route path=\"/musicreact/album/:id\" component={AlbumDetail}/>\r\n                <Route path=\"/musicreact/register\" component={Registration}/>\r\n                <Route path=\"/musicreact/user\" component={UserPanel}/>\r\n                <Route exact path=\"/musicreact/\" component={Songs}/>\r\n                <Route component={PageNotFound} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {CookiesProvider} from \"react-cookie\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <CookiesProvider>\n        <App />\n      </CookiesProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}